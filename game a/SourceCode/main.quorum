use Libraries.Game.Game
use Libraries.Sound.Music
use Libraries.Sound.Instrument
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Game.InputMonitor
use Libraries.Compute.Random
use Libraries.Interface.Events.KeyboardListener
 use Libraries.Game.Graphics.Drawable
/*

    This is a default class for creating a game in Quorum. Note that the Main 
    action begins by calling StartGame(), which loads a window a game can 
    be displayed in. The action CreateGame is where the game should load any 
    assets, like images to be displayed, frames of animation, or sounds to be
    played. 
*/  
class Main is Game
integer time = 0
Music m
Instrument i
Random note
KeyboardEvent s 
InputMonitor im 
Drawable hm
Drawable sm 
integer d = 0 

    /*
        This action, Main, starts our computer program. In Quorum, programs always
        begin from Main.
    */
    action Main
 SetScreenSize(600,400) 
       StartGame()
    end

    /*
        This action sets up the default values for a game. For example, we might
        use the Libraries.Game.Graphics.Drawable class to load up an image or 
        a shape. Or, we might add a Libraries.Interface.Button for making something clickable
        or a Libraries.Interface.TextBox for gathering user input in a game.
    */
    action CreateGame
               i = m:GetInstrument(0)
        m:SetInstrument(i)
        hm:Load("human male.png")
Add(hm) 
    
Add(sm)  
    sm:Load("samurai.jpg")  
sm:SetSize(400,100)
hm:SetSize(400,100)

hm:SetPosition(50,40) 
    sm:SetPosition(50,150)
end

    /*
        The update action is called on every "frame" of animation in a game. This
        action should be used to do operations on items. So, for example, we 
        might use this action to change frames of animation, to rotate items, 
        or to make creatures jump.
    */
    action Update(number seconds)
        time = time + 1
        integer force =0 
         force = note:RandomIntegerBetween(18,55) 
        m:Play(force,1)
       
        if im:IsKeyPressed(s:A)
        d = 2
        hm:Dispose()
end 
    if im:IsKeyPressed(s:S)
    d = 1
    sm:Dispose() 
end 
    
        if im:IsKeyPressed(s:RIGHT)
 
   
        if d = 1
        MoveRight(hm)
elseif d = 2   
     MoveRight(sm)
       end 
end
        if im:IsKeyPressed(s:LEFT)
   if d = 1  
    MoveLeft(hm) 
    elseif d = 2
MoveLeft(sm) 
end
end
                if im:IsKeyPressed(s:UP)
                if d = 1 
                MoveUp(hm) 
                elseif d = 2
               MoveUp(sm) 
end 

                
end

                if im:IsKeyPressed(s:DOWN)
                if d = 1 
                MoveDown(hm)
                elseif d = 2 
                MoveDown(sm)
               hm:MoveY(-10) 
end
end
        if im:IsKeyPressed(s:N) or time = 100
            Exit()
        end
       //if time = 10
         //   Exit()  
        //end
//hi
        m:Close()
    end

action MoveRight(Drawable d) 
    number l = d:GetX()
    if l < 200
    d:MoveX(10)  
end 
end 
    action MoveLeft(Drawable d) 
    number k = d:GetX() 
    if k > 0
d:MoveX(-10) 
end 
end  
action MoveUp(Drawable d) 
    number j = d:GetY() 
    if j < 300 
    d:MoveY(10) 
end 
end 
    action MoveDown(Drawable d)  
    number t = d:GetY() 
    if t > 0 
    d:MoveY(-10) 
end
end 
    action ChangeColor
    
end